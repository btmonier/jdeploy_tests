# This workflow will build a Java project with Maven and bundle them as native app installers with jDeploy
# See https://www.jdeploy.com for more information.

name: jDeploy CI with Maven

on:
  push:
    branches: ['*']
    tags: ['*']

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: |
          mvn clean package \
            -Dmaven.test.skip=true \
            dependency:copy-dependencies \
            -DoutputDirectory=lib

      - name: Print contents (dist)
        run: ls -alh dist/

      - name: Print contents (lib)
        run: ls -alh lib/

      - name: Create TASSEL "Standalone" distribution
        run: |
          mkdir -p dist/tassel-5-standalone
          cp -r lib/ dist/tassel-5-standalone/
          cp dist/sTASSEL.jar dist/tassel-5-standalone/
          cp \
            *.pl \
            *.bat \
            dist/tassel-5-standalone/

          cd dist/tassel-5-standalone

          # Fix Perl launch scripts
          for f in start_tassel.pl run_pipeline.pl; do
            sed -i.bak 's|push(@fl, "\$top/dist/sTASSEL.jar");|push(@fl, "\$top/sTASSEL.jar");|' "$f"
          done

          # Fix Batch launch scripts
          for f in start_tassel.bat run_pipeline.bat; do
            sed -i.bak 's|set CP=%TOP%\\dist\\sTASSEL.jar|;set CP=%TOP%\\sTASSEL.jar|' "$f"
          done

      - name: Print contents (standalone)
        run: ls -alh dist/tassel-5-standalone/

      - name: Archive TASSEL Standalone (ZIP and TAR.GZ)
        run: |
          cd dist/tassel-5-standalone/
          zip -r ../tassel-5-standalone.zip .
          tar -czf ../tassel-5-standalone.tar.gz .

      - name: Read Release Notes
        id: read_notes
        run: |
          notes=$(cat .github/release_template.md)
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo "$notes" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: TASSEL Release ${{ github.ref_name }}
          body: ${{ env.RELEASE_NOTES }}
          draft: false
          prerelease: false

      - name: Upload ZIP Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/tassel-5-standalone.zip
          asset_name: tassel-5-standalone.zip
          asset_content_type: application/zip

      - name: Upload TAR.GZ Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/tassel-5-standalone.tar.gz
          asset_name: tassel-5-standalone.tar.gz
          asset_content_type: application/gzip

      # - name: Build App Installer Bundles
      #   uses: shannah/jdeploy@master
      #   with:
      #     github_token: ${{ github.token }}
